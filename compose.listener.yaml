# TL;DR
# Make sure you have Docker Compose v2.x.x. installed and run
# docker compose -f compose.listener.yaml up

services:

  listener_1:
    build: .
    command: ros2 run demo_nodes_cpp listener --ros-args -r chatter:=chatter1

  listener_2:
    build: .
    command: ros2 run demo_nodes_cpp listener --ros-args -r chatter:=chatter2

  dds_router_listener:
    image: ghcr.io/dominikn/ros-galactic-fastdds:latest
    restart: always
    network_mode: service:husarnet_listener
    volumes:
      - ./router-config.listener.yaml:/config.yaml
    command: bash -c "/wait_for_discovery_server.sh && ddsrouter -c /config.yaml -r 10"
    # command: ddsrouter -c /config.yaml -r 10    # will work as well, but the Docker Compose log at startup will be ugly while waiting for `dds-discovery-server` host

  husarnet_listener:
    image: husarnet/husarnet
    restart: always
    # network_mode: host
    devices:
      - /dev/net/tun
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0  # Husarnet is using IPv6 for the internal connections
    cap_add:
      - NET_ADMIN
    volumes:
      - /var/lib/husarnet  # This will persist your Husarnet Client keys, thus IP of the container will be stable/the same between (re)boots
    environment:
      - HOSTNAME=listener
      - JOINCODE=${JOINCODE}

# Needed if running all compose.*.yaml files on the same host. Thanks to those lines a new subnet for this compose file is created
networks:
  default:
    name: net_listener
    driver: bridge
    