name: Test a Docker Deployment

on:
  push:
    branches:
      - 'main'
  
jobs:
  test-discovery-server:
    runs-on: ubuntu-20.04
    strategy:
      matrix:       
        device-id:         
        # - 'discovery-server'        
        - 'listener'
        - 'talker'

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    # - name: Set Discovery-Server address
    #   run: |
    #     export MYIPV6=$(sed -r 's/([0-9a-f:]+)\s.*/\1/g' id) 
    #     yq e -i '.InterRobotParticipant.connection-addresses[0].addresses[0].ip = strenv(MYIPV6)' ./dds-router-config-listener.yml
    #     yq e -i '.InterRobotParticipant.connection-addresses[0].addresses[0].ip = strenv(MYIPV6)' ./dds-router-config-talker.yml

    - name: Deploy ${{ matrix.device-id }}
      continue-on-error: true
      timeout-minutes: 1
      run: |
        echo JOINCODE=${{ secrets.HUSARNET_JOINCODE }} > .env
        docker-compose -f docker-compose.${{ matrix.device-id }}.yml up | tee output.txt

    - name: Check if the log contains "Hello World" string
      run: if [[ $(grep 'Hello World' output.txt | wc -l) -eq 0 ]]; then exit 1; fi
